[project]
name = "pypitest-gg-ldkjsdhfg"
description = ""
authors = [{ name = "Georg Gentzen", email = "georg.gentzen@jonasundderwolf.de" }]
requires-python = ">=3.12"
readme = "README.md"
keywords = [
]
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
]
dependencies = [
    "django>=4.2",
    "djangorestframework>=3.15",
]
dynamic = ["version"]

[build-system]
requires = ["setuptools", "setuptools_scm[toml]"]
build-backend = "setuptools.build_meta"

[dependency-groups]
test = [
    "pytest",
    "pytest-factoryboy",
    "pytest-django",
]
dev = ["pre-commit"]

[tool.uv]
default-groups = [
    "test",
    "dev",
]

[tool.ruff]
line-length = 90

[tool.ruff.lint]
ignore = [
    "E501", # pycodestyle: line-too-long
    "T201", # flake8-print: print statement found
]
select = [
    "B0",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "E",   # pycodestyle (Error)
    "F",   # Pyflakes
    "I",   # isort
    "T20", # flake8-print
    "W",   # pycodestyle (Warning)
]

[tool.ruff.lint.isort]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "project",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
"project" = ["pypitest"]

[tool.ruff.lint.mccabe]
max-complexity = 9

[tool.setuptools.packages.find]
include = ["pypitest"]
exclude = [".venv", "tests/*", "*/tests/*"]

[tool.setuptools_scm]
tag_regex = "^v(?P<version>.*)$"        # 1
write_to = "pypitest/_version.py"  # 2
local_scheme = "no-local-version"
